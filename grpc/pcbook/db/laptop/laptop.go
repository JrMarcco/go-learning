// Code generated by ent, DO NOT EDIT.

package laptop

import (
	"time"
)

const (
	// Label holds the string label denoting the laptop type in the database.
	Label = "laptop"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUID holds the string denoting the uid field in the database.
	FieldUID = "uid"
	// FieldBrand holds the string denoting the brand field in the database.
	FieldBrand = "brand"
	// FieldLaptopName holds the string denoting the laptop_name field in the database.
	FieldLaptopName = "laptop_name"
	// FieldWeight holds the string denoting the weight field in the database.
	FieldWeight = "weight"
	// FieldPriceRmb holds the string denoting the price_rmb field in the database.
	FieldPriceRmb = "price_rmb"
	// FieldReleaseYear holds the string denoting the release_year field in the database.
	FieldReleaseYear = "release_year"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the laptop in the database.
	Table = "laptops"
)

// Columns holds all SQL columns for laptop fields.
var Columns = []string{
	FieldID,
	FieldUID,
	FieldBrand,
	FieldLaptopName,
	FieldWeight,
	FieldPriceRmb,
	FieldReleaseYear,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// UIDValidator is a validator for the "uid" field. It is called by the builders before save.
	UIDValidator func(string) error
	// BrandValidator is a validator for the "brand" field. It is called by the builders before save.
	BrandValidator func(string) error
	// LaptopNameValidator is a validator for the "laptop_name" field. It is called by the builders before save.
	LaptopNameValidator func(string) error
	// DefaultWeight holds the default value on creation for the "weight" field.
	DefaultWeight float64
	// DefaultPriceRmb holds the default value on creation for the "price_rmb" field.
	DefaultPriceRmb uint32
	// DefaultReleaseYear holds the default value on creation for the "release_year" field.
	DefaultReleaseYear uint32
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
